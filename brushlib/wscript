
def build(bld):

    #print(bld.env)

    public_h = """
    brushlib-types.h
    brushlib-debug.h
    brushlib-main.h
    brushlib-rectangle.h
    brushlib-surface.h
    brushlib-tiled-surface.h
    brushlib-brush.h
    brushlib-version.h
    """

    main_public_h = "brushlib.h"

    brushlib_version_h = bld(
        features='subst',
        source = 'brushlib-version.h.in',
        target = 'brushlib-version.h',
        **bld.env['subst_dict']
    )

    brushlib = bld(
        features='c cshlib',
        uselib='GLIB GOBJECT JSONC',
        source=bld.path.ant_glob('*.c'),
        target='brushlib',
        includes='. ..',
    )

    if 'GI_SCANNER' in bld.env and 'GI_COMPILER' in bld.env:
        bld.add_group()

        gir_sources = public_h + """
        brushlib-main.c
        brushlib-rectangle.c
        brushlib-surface.c
        brushlib-tiled-surface.c
        """

        gir = bld(
            name='gir-scanner',
            rule='${GI_SCANNER} --warn-all --no-libtool --quiet ' +
                 '--namespace=${GI_NAMESPACE} ' +
                 '--nsversion=${API_VERSION} ' +
                 '--symbol-prefix=brushlib ' +
                 '--include=GObject-2.0 ' +
                 '-I{} '.format(bld.path.parent.abspath()) +
                 '-I{} '.format(bld.path.get_bld().parent.abspath()) +
                 '-DBRUSHLIB_COMPILATION ' +
                 '--library={} '.format(brushlib.target) +
                 '--library-path={} '.format(bld.path.get_bld().abspath()) +
                 '--output=${TGT} ${SRC}',
            target='{}-{}.gir'.format(bld.env.GI_NAMESPACE, bld.env.API_VERSION),
            source=gir_sources,
            install_path='${LIBDIR}/girepository-1.0',
        )

        typelib = bld(
            name='gir-compiler',
            after='gir-scanner',
            rule='${GI_COMPILER} ${SRC} -o ${TGT}',
            source=gir.target,
            target='{}-{}.typelib'.format(bld.env.GI_NAMESPACE, bld.env.API_VERSION),
            install_path='${LIBDIR}/girepository-1.0',
        )

# vim:ft=python
